version: '3'
services:
  ai:
    image: "formartha/ai1899:latest"
    networks:
      - int_network
    depends_on:
      - qdrant-container
      - redis
    volumes:
      - model-volume:/lm-model-home
    environment:
      - FLASK_PORT=5555
      - SENTENCE_TRANSFORMERS_HOME=/lm-model-home
      - LM_MODEL=${LM_MODEL}
      - QDRANT=qdrant-container
      - QDRANTPORT=6333
      - REDDIS_CELERY=redis://redis:6379/0
    deploy:
      resources:
        limits:
          cpus: "1" # Recommended: 4 CPUs
          memory: 1GB # Recommended: 4GB RAM
    command: python3 server.py

  qdrant-container:
    image: "ghcr.io/qdrant/qdrant/qdrant:v1.7.4"
    networks:
      - int_network
    ports: # remove after https://github.com/qdrant/qdrant-web-ui/issues/94 is solved
      - "6333:6333"
    deploy:
      resources:
        limits:
          cpus: "0.5" # Recommended: 2 CPUs
          memory: 500M # Recommended: 2GB RAM

  redis:
    hostname: "redis"
    image: "redis:7.2.4-alpine"
    networks:
      - int_network
    deploy:
      resources:
        limits:
          cpus: "0.5" # Recommended: 4 CPUs
          memory: 500M # Recommended: 4GB RAM
    volumes:
      - redis_data:/data

  redis-commander:
    image: "rediscommander/redis-commander:latest"
    environment:
      - REDIS_HOSTS=local:redis:6379
    networks:
      - int_network
    deploy:
      resources:
        limits:
          cpus: "0.5" # Recommended: 4 CPUs
          memory: 500M # Recommended: 4GB RAM

  celery-worker:
    image: "formartha/ai1899:latest"  # Use the same image as ai service, assuming it has Celery installed
    networks:
      - int_network
    depends_on:
      - ai
    volumes:
      - model-volume:/lm-model-home
    environment:
      - SENTENCE_TRANSFORMERS_HOME=/lm-model-home
      - LM_MODEL=${LM_MODEL}
      - QDRANT=qdrant-container
      - QDRANTPORT=6333
      - REDDIS_CELERY=redis://redis:6379/0
    deploy:
      resources:
        limits:
          cpus: "0.5" # Recommended: 4 CPUs
          memory: 500M # Recommended: 4GB RAM
    command: celery --app=tasks worker --loglevel=INFO --pool=solo

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    networks:
      - int_network
    depends_on:
      - ai
      - qdrant-container
      - redis
    deploy:
      resources:
        limits:
          cpus: "0.5" # Recommended: 1 CPUs
          memory: 500M # Recommended: 4GB RAM

networks:
  int_network:
    driver: bridge

volumes:
  model-volume:
    driver: local
    driver_opts:
      type: none
      device: ${DEVICE} # /path/to/your/model
      o: bind
  redis_data:
    external: false